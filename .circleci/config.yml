version: 2.1
jobs:
  build:
    docker:
      - image: cimg/base:2020.01

    steps:
      - setup_remote_docker

      - checkout

      - run:
          name: Build Docker image
          command: |
            docker build . --tag app:latest
            docker tag app:latest app:${CIRCLE_BRANCH}
            docker tag app:latest app:${CIRCLE_SHA1}

  test:
    docker:
      - image: circleci/ruby:2.6.6-node-browsers
        environment:
          MAIL_SENDER: user@example.com
          RAILS_ENV: test
          DATABASE_URL: postgres://test:test@localhost/test
      - image: circleci/postgres:10.5-postgres
        environment:
           POSTGRES_USER: test
           POSTGRES_DB: test
           POSTGRES_PASSWORD: test
    steps:
      - checkout

      - run:
          name: Which Bundler?
          command: bundle -v

      - restore_cache:
          keys:
            - bundle-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - bundle-{{ .Branch }}-
            - bundle-

      - run:
          name: Bundle Install
          command: |
            bundle install --deployment \
                           --retry=3 \
                           --jobs=3

      - save_cache:
          key: bundle-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Run Standard
          command: bundle exec rake standard

      - run:
          name: Wait for database
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: RAILS_ENV=development bin/setup

      - run:
          name: Run tests
          command: COVERAGE=true bundle exec rake

      - store_artifacts:
           path: coverage

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
